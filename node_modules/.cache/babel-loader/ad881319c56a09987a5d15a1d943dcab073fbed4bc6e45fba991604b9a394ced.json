{"ast":null,"code":"import PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, useClassNamesOnNode } from '../../lib';\n/**\n * A component that allows to manage classNames on a DOM node in declarative manner.\n *\n * @deprecated This component is deprecated and will be removed in next major release.\n */\n\nfunction MountNode(props) {\n  useClassNamesOnNode(props.node, props.className); // A workaround for `react-docgen`: https://github.com/reactjs/react-docgen/issues/336\n\n  if (process.env.NODE_ENV === 'test') {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n  /* istanbul ignore next */\n\n  return null;\n}\nMountNode.handledProps = [\"className\", \"node\"];\nMountNode.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** The DOM node where we will apply class names. Defaults to document.body. */\n  node: PropTypes.oneOfType([customPropTypes.domNode, customPropTypes.refObject])\n} : {};\nexport default MountNode;","map":{"version":3,"names":["PropTypes","React","customPropTypes","useClassNamesOnNode","MountNode","props","node","className","process","env","NODE_ENV","createElement","handledProps","propTypes","string","oneOfType","domNode","refObject"],"sources":["/Users/loveleenbassi/node_modules/semantic-ui-react/dist/es/addons/MountNode/MountNode.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, useClassNamesOnNode } from '../../lib';\n/**\n * A component that allows to manage classNames on a DOM node in declarative manner.\n *\n * @deprecated This component is deprecated and will be removed in next major release.\n */\n\nfunction MountNode(props) {\n  useClassNamesOnNode(props.node, props.className); // A workaround for `react-docgen`: https://github.com/reactjs/react-docgen/issues/336\n\n  if (process.env.NODE_ENV === 'test') {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n  /* istanbul ignore next */\n\n\n  return null;\n}\n\nMountNode.handledProps = [\"className\", \"node\"];\nMountNode.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The DOM node where we will apply class names. Defaults to document.body. */\n  node: PropTypes.oneOfType([customPropTypes.domNode, customPropTypes.refObject])\n} : {};\nexport default MountNode;"],"mappings":"AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,EAAEC,mBAAmB,QAAQ,WAAW;AAChE;AACA;AACA;AACA;AACA;;AAEA,SAASC,SAASA,CAACC,KAAK,EAAE;EACxBF,mBAAmB,CAACE,KAAK,CAACC,IAAI,EAAED,KAAK,CAACE,SAAS,CAAC,CAAC,CAAC;;EAElD,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,EAAE;IACnC,OAAO,aAAaT,KAAK,CAACU,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC;EACtD;EACA;;EAGA,OAAO,IAAI;AACb;AAEAP,SAAS,CAACQ,YAAY,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC;AAC9CR,SAAS,CAACS,SAAS,GAAGL,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC5D;EACAH,SAAS,EAAEP,SAAS,CAACc,MAAM;EAE3B;EACAR,IAAI,EAAEN,SAAS,CAACe,SAAS,CAAC,CAACb,eAAe,CAACc,OAAO,EAAEd,eAAe,CAACe,SAAS,CAAC;AAChF,CAAC,GAAG,CAAC,CAAC;AACN,eAAeb,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}